'use strict';

angular.module('app', [
    'ngRoute',
    'ui.router',
    'ui.bootstrap',
    'ngResource',
    'ngSanitize',
    "com.2fdevs.videogular",
    "com.2fdevs.videogular.plugins.controls",
    'ngAnimate',
    'lbServices',
    'duScroll',
    'textAngular',
    'angular-growl',
    'app.services',
    'app.modules',
    'angularMoment'
]);
angular.module('app.services', ['lbServices', 'angularFileUpload']);
angular.module('app').controller('IndexController', function() {});

!function(d){function g(){return new Date(Date.UTC.apply(Date,arguments))}function b(){var h=new Date();return g(h.getUTCFullYear(),h.getUTCMonth(),h.getUTCDate(),h.getUTCHours(),h.getUTCMinutes(),h.getUTCSeconds(),0)}var f=function(j,i){var l=this;this.element=d(j);this.container=i.container||"body";this.language=i.language||this.element.data("date-language")||"en";this.language=this.language in e?this.language:"en";this.isRTL=e[this.language].rtl||false;this.formatType=i.formatType||this.element.data("format-type")||"standard";this.format=c.parseFormat(i.format||this.element.data("date-format")||e[this.language].format||c.getDefaultFormat(this.formatType,"input"),this.formatType);this.isInline=false;this.isVisible=false;this.isInput=this.element.is("input");this.fontAwesome=i.fontAwesome||this.element.data("font-awesome")||false;this.bootcssVer=i.bootcssVer||(this.isInput?(this.element.is(".form-control")?3:2):(this.bootcssVer=this.element.is(".input-group")?3:2));this.component=this.element.is(".date")?(this.bootcssVer==3?this.element.find(".input-group-addon .glyphicon-th, .input-group-addon .glyphicon-time, .input-group-addon .glyphicon-calendar, .input-group-addon .glyphicon-calendar, .input-group-addon .fa-calendar, .input-group-addon .fa-clock-o").parent():this.element.find(".add-on .icon-th, .add-on .icon-time, .add-on .icon-calendar .fa-calendar .fa-clock-o").parent()):false;this.componentReset=this.element.is(".date")?(this.bootcssVer==3?this.element.find(".input-group-addon .glyphicon-remove, .input-group-addon .fa-times").parent():this.element.find(".add-on .icon-remove, .add-on .fa-times").parent()):false;this.hasInput=this.component&&this.element.find("input").length;if(this.component&&this.component.length===0){this.component=false}this.linkField=i.linkField||this.element.data("link-field")||false;this.linkFormat=c.parseFormat(i.linkFormat||this.element.data("link-format")||c.getDefaultFormat(this.formatType,"link"),this.formatType);this.minuteStep=i.minuteStep||this.element.data("minute-step")||5;this.pickerPosition=i.pickerPosition||this.element.data("picker-position")||"bottom-right";this.showMeridian=i.showMeridian||this.element.data("show-meridian")||false;this.initialDate=i.initialDate||new Date();this.zIndex=i.zIndex||this.element.data("z-index")||undefined;this.icons={leftArrow:this.fontAwesome?"fa-arrow-left":(this.bootcssVer===3?"glyphicon-arrow-left":"icon-arrow-left"),rightArrow:this.fontAwesome?"fa-arrow-right":(this.bootcssVer===3?"glyphicon-arrow-right":"icon-arrow-right")};this.icontype=this.fontAwesome?"fa":"glyphicon";this._attachEvents();this.formatViewType="datetime";if("formatViewType" in i){this.formatViewType=i.formatViewType}else{if("formatViewType" in this.element.data()){this.formatViewType=this.element.data("formatViewType")}}this.minView=0;if("minView" in i){this.minView=i.minView}else{if("minView" in this.element.data()){this.minView=this.element.data("min-view")}}this.minView=c.convertViewMode(this.minView);this.maxView=c.modes.length-1;if("maxView" in i){this.maxView=i.maxView}else{if("maxView" in this.element.data()){this.maxView=this.element.data("max-view")}}this.maxView=c.convertViewMode(this.maxView);this.wheelViewModeNavigation=false;if("wheelViewModeNavigation" in i){this.wheelViewModeNavigation=i.wheelViewModeNavigation}else{if("wheelViewModeNavigation" in this.element.data()){this.wheelViewModeNavigation=this.element.data("view-mode-wheel-navigation")}}this.wheelViewModeNavigationInverseDirection=false;if("wheelViewModeNavigationInverseDirection" in i){this.wheelViewModeNavigationInverseDirection=i.wheelViewModeNavigationInverseDirection}else{if("wheelViewModeNavigationInverseDirection" in this.element.data()){this.wheelViewModeNavigationInverseDirection=this.element.data("view-mode-wheel-navigation-inverse-dir")}}this.wheelViewModeNavigationDelay=100;if("wheelViewModeNavigationDelay" in i){this.wheelViewModeNavigationDelay=i.wheelViewModeNavigationDelay}else{if("wheelViewModeNavigationDelay" in this.element.data()){this.wheelViewModeNavigationDelay=this.element.data("view-mode-wheel-navigation-delay")}}this.startViewMode=2;if("startView" in i){this.startViewMode=i.startView}else{if("startView" in this.element.data()){this.startViewMode=this.element.data("start-view")}}this.startViewMode=c.convertViewMode(this.startViewMode);this.viewMode=this.startViewMode;this.viewSelect=this.minView;if("viewSelect" in i){this.viewSelect=i.viewSelect}else{if("viewSelect" in this.element.data()){this.viewSelect=this.element.data("view-select")}}this.viewSelect=c.convertViewMode(this.viewSelect);this.forceParse=true;if("forceParse" in i){this.forceParse=i.forceParse}else{if("dateForceParse" in this.element.data()){this.forceParse=this.element.data("date-force-parse")}}var k=this.bootcssVer===3?c.templateV3:c.template;while(k.indexOf("{iconType}")!==-1){k=k.replace("{iconType}",this.icontype)}while(k.indexOf("{leftArrow}")!==-1){k=k.replace("{leftArrow}",this.icons.leftArrow)}while(k.indexOf("{rightArrow}")!==-1){k=k.replace("{rightArrow}",this.icons.rightArrow)}this.picker=d(k).appendTo(this.isInline?this.element:this.container).on({click:d.proxy(this.click,this),mousedown:d.proxy(this.mousedown,this)});if(this.wheelViewModeNavigation){if(d.fn.mousewheel){this.picker.on({mousewheel:d.proxy(this.mousewheel,this)})}else{console.log("Mouse Wheel event is not supported. Please include the jQuery Mouse Wheel plugin before enabling this option")}}if(this.isInline){this.picker.addClass("datetimepicker-inline")}else{this.picker.addClass("datetimepicker-dropdown-"+this.pickerPosition+" dropdown-menu")}if(this.isRTL){this.picker.addClass("datetimepicker-rtl");var h=this.bootcssVer===3?".prev span, .next span":".prev i, .next i";this.picker.find(h).toggleClass(this.icons.leftArrow+" "+this.icons.rightArrow)}d(document).on("mousedown",function(m){if(d(m.target).closest(".datetimepicker").length===0){l.hide()}});this.autoclose=false;if("autoclose" in i){this.autoclose=i.autoclose}else{if("dateAutoclose" in this.element.data()){this.autoclose=this.element.data("date-autoclose")}}this.keyboardNavigation=true;if("keyboardNavigation" in i){this.keyboardNavigation=i.keyboardNavigation}else{if("dateKeyboardNavigation" in this.element.data()){this.keyboardNavigation=this.element.data("date-keyboard-navigation")}}this.todayBtn=(i.todayBtn||this.element.data("date-today-btn")||false);this.todayHighlight=(i.todayHighlight||this.element.data("date-today-highlight")||false);this.weekStart=((i.weekStart||this.element.data("date-weekstart")||e[this.language].weekStart||0)%7);this.weekEnd=((this.weekStart+6)%7);this.startDate=-Infinity;this.endDate=Infinity;this.daysOfWeekDisabled=[];this.setStartDate(i.startDate||this.element.data("date-startdate"));this.setEndDate(i.endDate||this.element.data("date-enddate"));this.setDaysOfWeekDisabled(i.daysOfWeekDisabled||this.element.data("date-days-of-week-disabled"));this.setMinutesDisabled(i.minutesDisabled||this.element.data("date-minute-disabled"));this.setHoursDisabled(i.hoursDisabled||this.element.data("date-hour-disabled"));this.fillDow();this.fillMonths();this.update();this.showMode();if(this.isInline){this.show()}};f.prototype={constructor:f,_events:[],_attachEvents:function(){this._detachEvents();if(this.isInput){this._events=[[this.element,{focus:d.proxy(this.show,this),keyup:d.proxy(this.update,this),keydown:d.proxy(this.keydown,this)}]]}else{if(this.component&&this.hasInput){this._events=[[this.element.find("input"),{focus:d.proxy(this.show,this),keyup:d.proxy(this.update,this),keydown:d.proxy(this.keydown,this)}],[this.component,{click:d.proxy(this.show,this)}]];if(this.componentReset){this._events.push([this.componentReset,{click:d.proxy(this.reset,this)}])}}else{if(this.element.is("div")){this.isInline=true}else{this._events=[[this.element,{click:d.proxy(this.show,this)}]]}}}for(var h=0,j,k;h<this._events.length;h++){j=this._events[h][0];k=this._events[h][1];j.on(k)}},_detachEvents:function(){for(var h=0,j,k;h<this._events.length;h++){j=this._events[h][0];k=this._events[h][1];j.off(k)}this._events=[]},show:function(h){this.picker.show();this.height=this.component?this.component.outerHeight():this.element.outerHeight();if(this.forceParse){this.update()}this.place();d(window).on("resize",d.proxy(this.place,this));if(h){h.stopPropagation();h.preventDefault()}this.isVisible=true;this.element.trigger({type:"show",date:this.date})},hide:function(h){if(!this.isVisible){return}if(this.isInline){return}this.picker.hide();d(window).off("resize",this.place);this.viewMode=this.startViewMode;this.showMode();if(!this.isInput){d(document).off("mousedown",this.hide)}if(this.forceParse&&(this.isInput&&this.element.val()||this.hasInput&&this.element.find("input").val())){this.setValue()}this.isVisible=false;this.element.trigger({type:"hide",date:this.date})},remove:function(){this._detachEvents();this.picker.remove();delete this.picker;delete this.element.data().datetimepicker},getDate:function(){var h=this.getUTCDate();return new Date(h.getTime()+(h.getTimezoneOffset()*60000))},getUTCDate:function(){return this.date},setDate:function(h){this.setUTCDate(new Date(h.getTime()-(h.getTimezoneOffset()*60000)))},setUTCDate:function(h){if(h>=this.startDate&&h<=this.endDate){this.date=h;this.setValue();this.viewDate=this.date;this.fill()}else{this.element.trigger({type:"outOfRange",date:h,startDate:this.startDate,endDate:this.endDate})}},setFormat:function(i){this.format=c.parseFormat(i,this.formatType);var h;if(this.isInput){h=this.element}else{if(this.component){h=this.element.find("input")}}if(h&&h.val()){this.setValue()}},setValue:function(){var h=this.getFormattedDate();if(!this.isInput){if(this.component){this.element.find("input").val(h)}this.element.data("date",h)}else{this.element.val(h)}if(this.linkField){d("#"+this.linkField).val(this.getFormattedDate(this.linkFormat))}},getFormattedDate:function(h){if(h==undefined){h=this.format}return c.formatDate(this.date,h,this.language,this.formatType)},setStartDate:function(h){this.startDate=h||-Infinity;if(this.startDate!==-Infinity){this.startDate=c.parseDate(this.startDate,this.format,this.language,this.formatType)}this.update();this.updateNavArrows()},setEndDate:function(h){this.endDate=h||Infinity;if(this.endDate!==Infinity){this.endDate=c.parseDate(this.endDate,this.format,this.language,this.formatType)}this.update();this.updateNavArrows()},setDaysOfWeekDisabled:function(h){this.daysOfWeekDisabled=h||[];if(!d.isArray(this.daysOfWeekDisabled)){this.daysOfWeekDisabled=this.daysOfWeekDisabled.split(/,\s*/)}this.daysOfWeekDisabled=d.map(this.daysOfWeekDisabled,function(i){return parseInt(i,10)});this.update();this.updateNavArrows()},setMinutesDisabled:function(h){this.minutesDisabled=h||[];if(!d.isArray(this.minutesDisabled)){this.minutesDisabled=this.minutesDisabled.split(/,\s*/)}this.minutesDisabled=d.map(this.minutesDisabled,function(i){return parseInt(i,10)});this.update();this.updateNavArrows()},setHoursDisabled:function(h){this.hoursDisabled=h||[];if(!d.isArray(this.hoursDisabled)){this.hoursDisabled=this.hoursDisabled.split(/,\s*/)}this.hoursDisabled=d.map(this.hoursDisabled,function(i){return parseInt(i,10)});this.update();this.updateNavArrows()},place:function(){if(this.isInline){return}if(!this.zIndex){var h=0;d("div").each(function(){var m=parseInt(d(this).css("zIndex"),10);if(m>h){h=m}});this.zIndex=h+10}var l,k,j,i;if(this.container instanceof d){i=this.container.offset()}else{i=d(this.container).offset()}if(this.component){l=this.component.offset();j=l.left;if(this.pickerPosition=="bottom-left"||this.pickerPosition=="top-left"){j+=this.component.outerWidth()-this.picker.outerWidth()}}else{l=this.element.offset();j=l.left}if(j+220>document.body.clientWidth){j=document.body.clientWidth-220}if(this.pickerPosition=="top-left"||this.pickerPosition=="top-right"){k=l.top-this.picker.outerHeight()}else{k=l.top+this.height}k=k-i.top;j=j-i.left;if(this.container!="body"){k=k+document.body.scrollTop}this.picker.css({top:k,left:j,zIndex:this.zIndex})},update:function(){var h,i=false;if(arguments&&arguments.length&&(typeof arguments[0]==="string"||arguments[0] instanceof Date)){h=arguments[0];i=true}else{h=(this.isInput?this.element.val():this.element.find("input").val())||this.element.data("date")||this.initialDate;if(typeof h=="string"||h instanceof String){h=h.replace(/^\s+|\s+$/g,"")}}if(!h){h=new Date();i=false}this.date=c.parseDate(h,this.format,this.language,this.formatType);if(i){this.setValue()}if(this.date<this.startDate){this.viewDate=new Date(this.startDate)}else{if(this.date>this.endDate){this.viewDate=new Date(this.endDate)}else{this.viewDate=new Date(this.date)}}this.fill()},fillDow:function(){var h=this.weekStart,i="<tr>";while(h<this.weekStart+7){i+='<th class="dow">'+e[this.language].daysMin[(h++)%7]+"</th>"}i+="</tr>";this.picker.find(".datetimepicker-days thead").append(i)},fillMonths:function(){var j="",h=0;while(h<12){j+='<span class="month">'+e[this.language].monthsShort[h++]+"</span>"}this.picker.find(".datetimepicker-months td").html(j)},fill:function(){if(this.date==null||this.viewDate==null){return}var F=new Date(this.viewDate),s=F.getUTCFullYear(),G=F.getUTCMonth(),m=F.getUTCDate(),B=F.getUTCHours(),w=F.getUTCMinutes(),x=this.startDate!==-Infinity?this.startDate.getUTCFullYear():-Infinity,C=this.startDate!==-Infinity?this.startDate.getUTCMonth()+1:-Infinity,o=this.endDate!==Infinity?this.endDate.getUTCFullYear():Infinity,y=this.endDate!==Infinity?this.endDate.getUTCMonth()+1:Infinity,p=(new g(this.date.getUTCFullYear(),this.date.getUTCMonth(),this.date.getUTCDate())).valueOf(),E=new Date();this.picker.find(".datetimepicker-days thead th:eq(1)").text(e[this.language].months[G]+" "+s);if(this.formatViewType=="time"){var j=this.getFormattedDate();this.picker.find(".datetimepicker-hours thead th:eq(1)").text(j);this.picker.find(".datetimepicker-minutes thead th:eq(1)").text(j)}else{this.picker.find(".datetimepicker-hours thead th:eq(1)").text(m+" "+e[this.language].months[G]+" "+s);this.picker.find(".datetimepicker-minutes thead th:eq(1)").text(m+" "+e[this.language].months[G]+" "+s)}this.picker.find("tfoot th.today").text(e[this.language].today).toggle(this.todayBtn!==false);this.updateNavArrows();this.fillMonths();var I=g(s,G-1,28,0,0,0,0),A=c.getDaysInMonth(I.getUTCFullYear(),I.getUTCMonth());I.setUTCDate(A);I.setUTCDate(A-(I.getUTCDay()-this.weekStart+7)%7);var h=new Date(I);h.setUTCDate(h.getUTCDate()+42);h=h.valueOf();var q=[];var t;while(I.valueOf()<h){if(I.getUTCDay()==this.weekStart){q.push("<tr>")}t="";if(I.getUTCFullYear()<s||(I.getUTCFullYear()==s&&I.getUTCMonth()<G)){t+=" old"}else{if(I.getUTCFullYear()>s||(I.getUTCFullYear()==s&&I.getUTCMonth()>G)){t+=" new"}}if(this.todayHighlight&&I.getUTCFullYear()==E.getFullYear()&&I.getUTCMonth()==E.getMonth()&&I.getUTCDate()==E.getDate()){t+=" today"}if(I.valueOf()==p){t+=" active"}if((I.valueOf()+86400000)<=this.startDate||I.valueOf()>this.endDate||d.inArray(I.getUTCDay(),this.daysOfWeekDisabled)!==-1){t+=" disabled"}q.push('<td class="day'+t+'">'+I.getUTCDate()+"</td>");if(I.getUTCDay()==this.weekEnd){q.push("</tr>")}I.setUTCDate(I.getUTCDate()+1)}this.picker.find(".datetimepicker-days tbody").empty().append(q.join(""));q=[];var u="",D="",r="";var k=this.hoursDisabled||[];for(var z=0;z<24;z++){if(k.indexOf(z)!==-1){continue}var v=g(s,G,m,z);t="";if((v.valueOf()+3600000)<=this.startDate||v.valueOf()>this.endDate){t+=" disabled"}else{if(B==z){t+=" active"}}if(this.showMeridian&&e[this.language].meridiem.length==2){D=(z<12?e[this.language].meridiem[0]:e[this.language].meridiem[1]);if(D!=r){if(r!=""){q.push("</fieldset>")}q.push('<fieldset class="hour"><legend>'+D.toUpperCase()+"</legend>")}r=D;u=(z%12?z%12:12);q.push('<span class="hour'+t+" hour_"+(z<12?"am":"pm")+'">'+u+"</span>");if(z==23){q.push("</fieldset>")}}else{u=z+":00";q.push('<span class="hour'+t+'">'+u+"</span>")}}this.picker.find(".datetimepicker-hours td").html(q.join(""));q=[];u="",D="",r="";var l=this.minutesDisabled||[];for(var z=0;z<60;z+=this.minuteStep){if(l.indexOf(z)!==-1){continue}var v=g(s,G,m,B,z,0);t="";if(v.valueOf()<this.startDate||v.valueOf()>this.endDate){t+=" disabled"}else{if(Math.floor(w/this.minuteStep)==Math.floor(z/this.minuteStep)){t+=" active"}}if(this.showMeridian&&e[this.language].meridiem.length==2){D=(B<12?e[this.language].meridiem[0]:e[this.language].meridiem[1]);if(D!=r){if(r!=""){q.push("</fieldset>")}q.push('<fieldset class="minute"><legend>'+D.toUpperCase()+"</legend>")}r=D;u=(B%12?B%12:12);q.push('<span class="minute'+t+'">'+u+":"+(z<10?"0"+z:z)+"</span>");if(z==59){q.push("</fieldset>")}}else{u=z+":00";q.push('<span class="minute'+t+'">'+B+":"+(z<10?"0"+z:z)+"</span>")}}this.picker.find(".datetimepicker-minutes td").html(q.join(""));var J=this.date.getUTCFullYear();var n=this.picker.find(".datetimepicker-months").find("th:eq(1)").text(s).end().find("span").removeClass("active");if(J==s){n.eq(this.date.getUTCMonth()+2).addClass("active")}if(s<x||s>o){n.addClass("disabled")}if(s==x){n.slice(0,C+1).addClass("disabled")}if(s==o){n.slice(y).addClass("disabled")}q="";s=parseInt(s/10,10)*10;var H=this.picker.find(".datetimepicker-years").find("th:eq(1)").text(s+"-"+(s+9)).end().find("td");s-=1;for(var z=-1;z<11;z++){q+='<span class="year'+(z==-1||z==10?" old":"")+(J==s?" active":"")+(s<x||s>o?" disabled":"")+'">'+s+"</span>";s+=1}H.html(q);this.place()},updateNavArrows:function(){var l=new Date(this.viewDate),j=l.getUTCFullYear(),k=l.getUTCMonth(),i=l.getUTCDate(),h=l.getUTCHours();switch(this.viewMode){case 0:if(this.startDate!==-Infinity&&j<=this.startDate.getUTCFullYear()&&k<=this.startDate.getUTCMonth()&&i<=this.startDate.getUTCDate()&&h<=this.startDate.getUTCHours()){this.picker.find(".prev").css({visibility:"hidden"})}else{this.picker.find(".prev").css({visibility:"visible"})}if(this.endDate!==Infinity&&j>=this.endDate.getUTCFullYear()&&k>=this.endDate.getUTCMonth()&&i>=this.endDate.getUTCDate()&&h>=this.endDate.getUTCHours()){this.picker.find(".next").css({visibility:"hidden"})}else{this.picker.find(".next").css({visibility:"visible"})}break;case 1:if(this.startDate!==-Infinity&&j<=this.startDate.getUTCFullYear()&&k<=this.startDate.getUTCMonth()&&i<=this.startDate.getUTCDate()){this.picker.find(".prev").css({visibility:"hidden"})}else{this.picker.find(".prev").css({visibility:"visible"})}if(this.endDate!==Infinity&&j>=this.endDate.getUTCFullYear()&&k>=this.endDate.getUTCMonth()&&i>=this.endDate.getUTCDate()){this.picker.find(".next").css({visibility:"hidden"})}else{this.picker.find(".next").css({visibility:"visible"})}break;case 2:if(this.startDate!==-Infinity&&j<=this.startDate.getUTCFullYear()&&k<=this.startDate.getUTCMonth()){this.picker.find(".prev").css({visibility:"hidden"})}else{this.picker.find(".prev").css({visibility:"visible"})}if(this.endDate!==Infinity&&j>=this.endDate.getUTCFullYear()&&k>=this.endDate.getUTCMonth()){this.picker.find(".next").css({visibility:"hidden"})}else{this.picker.find(".next").css({visibility:"visible"})}break;case 3:case 4:if(this.startDate!==-Infinity&&j<=this.startDate.getUTCFullYear()){this.picker.find(".prev").css({visibility:"hidden"})}else{this.picker.find(".prev").css({visibility:"visible"})}if(this.endDate!==Infinity&&j>=this.endDate.getUTCFullYear()){this.picker.find(".next").css({visibility:"hidden"})}else{this.picker.find(".next").css({visibility:"visible"})}break}},mousewheel:function(i){i.preventDefault();i.stopPropagation();if(this.wheelPause){return}this.wheelPause=true;var h=i.originalEvent;var k=h.wheelDelta;var j=k>0?1:(k===0)?0:-1;if(this.wheelViewModeNavigationInverseDirection){j=-j}this.showMode(j);setTimeout(d.proxy(function(){this.wheelPause=false},this),this.wheelViewModeNavigationDelay)},click:function(l){l.stopPropagation();l.preventDefault();var m=d(l.target).closest("span, td, th, legend");if(m.is("."+this.icontype)){m=d(m).parent().closest("span, td, th, legend")}if(m.length==1){if(m.is(".disabled")){this.element.trigger({type:"outOfRange",date:this.viewDate,startDate:this.startDate,endDate:this.endDate});return}switch(m[0].nodeName.toLowerCase()){case"th":switch(m[0].className){case"switch":this.showMode(1);break;case"prev":case"next":var h=c.modes[this.viewMode].navStep*(m[0].className=="prev"?-1:1);switch(this.viewMode){case 0:this.viewDate=this.moveHour(this.viewDate,h);break;case 1:this.viewDate=this.moveDate(this.viewDate,h);break;case 2:this.viewDate=this.moveMonth(this.viewDate,h);break;case 3:case 4:this.viewDate=this.moveYear(this.viewDate,h);break}this.fill();this.element.trigger({type:m[0].className+":"+this.convertViewModeText(this.viewMode),date:this.viewDate,startDate:this.startDate,endDate:this.endDate});break;case"today":var i=new Date();i=g(i.getFullYear(),i.getMonth(),i.getDate(),i.getHours(),i.getMinutes(),i.getSeconds(),0);if(i<this.startDate){i=this.startDate}else{if(i>this.endDate){i=this.endDate}}this.viewMode=this.startViewMode;this.showMode(0);this._setDate(i);this.fill();if(this.autoclose){this.hide()}break}break;case"span":if(!m.is(".disabled")){var o=this.viewDate.getUTCFullYear(),n=this.viewDate.getUTCMonth(),p=this.viewDate.getUTCDate(),q=this.viewDate.getUTCHours(),j=this.viewDate.getUTCMinutes(),r=this.viewDate.getUTCSeconds();if(m.is(".month")){this.viewDate.setUTCDate(1);n=m.parent().find("span").index(m);p=this.viewDate.getUTCDate();this.viewDate.setUTCMonth(n);this.element.trigger({type:"changeMonth",date:this.viewDate});if(this.viewSelect>=3){this._setDate(g(o,n,p,q,j,r,0))}}else{if(m.is(".year")){this.viewDate.setUTCDate(1);o=parseInt(m.text(),10)||0;this.viewDate.setUTCFullYear(o);this.element.trigger({type:"changeYear",date:this.viewDate});if(this.viewSelect>=4){this._setDate(g(o,n,p,q,j,r,0))}}else{if(m.is(".hour")){q=parseInt(m.text(),10)||0;if(m.hasClass("hour_am")||m.hasClass("hour_pm")){if(q==12&&m.hasClass("hour_am")){q=0}else{if(q!=12&&m.hasClass("hour_pm")){q+=12}}}this.viewDate.setUTCHours(q);this.element.trigger({type:"changeHour",date:this.viewDate});if(this.viewSelect>=1){this._setDate(g(o,n,p,q,j,r,0))}}else{if(m.is(".minute")){j=parseInt(m.text().substr(m.text().indexOf(":")+1),10)||0;this.viewDate.setUTCMinutes(j);this.element.trigger({type:"changeMinute",date:this.viewDate});if(this.viewSelect>=0){this._setDate(g(o,n,p,q,j,r,0))}}}}}if(this.viewMode!=0){var k=this.viewMode;this.showMode(-1);this.fill();if(k==this.viewMode&&this.autoclose){this.hide()}}else{this.fill();if(this.autoclose){this.hide()}}}break;case"td":if(m.is(".day")&&!m.is(".disabled")){var p=parseInt(m.text(),10)||1;var o=this.viewDate.getUTCFullYear(),n=this.viewDate.getUTCMonth(),q=this.viewDate.getUTCHours(),j=this.viewDate.getUTCMinutes(),r=this.viewDate.getUTCSeconds();if(m.is(".old")){if(n===0){n=11;o-=1}else{n-=1}}else{if(m.is(".new")){if(n==11){n=0;o+=1}else{n+=1}}}this.viewDate.setUTCFullYear(o);this.viewDate.setUTCMonth(n,p);this.element.trigger({type:"changeDay",date:this.viewDate});if(this.viewSelect>=2){this._setDate(g(o,n,p,q,j,r,0))}}var k=this.viewMode;this.showMode(-1);this.fill();if(k==this.viewMode&&this.autoclose){this.hide()}break}}},_setDate:function(h,j){if(!j||j=="date"){this.date=h}if(!j||j=="view"){this.viewDate=h}this.fill();this.setValue();var i;if(this.isInput){i=this.element}else{if(this.component){i=this.element.find("input")}}if(i){i.change();if(this.autoclose&&(!j||j=="date")){}}this.element.trigger({type:"changeDate",date:this.date})},moveMinute:function(i,h){if(!h){return i}var j=new Date(i.valueOf());j.setUTCMinutes(j.getUTCMinutes()+(h*this.minuteStep));return j},moveHour:function(i,h){if(!h){return i}var j=new Date(i.valueOf());j.setUTCHours(j.getUTCHours()+h);return j},moveDate:function(i,h){if(!h){return i}var j=new Date(i.valueOf());j.setUTCDate(j.getUTCDate()+h);return j},moveMonth:function(h,j){if(!j){return h}var m=new Date(h.valueOf()),q=m.getUTCDate(),n=m.getUTCMonth(),l=Math.abs(j),p,o;j=j>0?1:-1;if(l==1){o=j==-1?function(){return m.getUTCMonth()==n}:function(){return m.getUTCMonth()!=p};p=n+j;m.setUTCMonth(p);if(p<0||p>11){p=(p+12)%12}}else{for(var k=0;k<l;k++){m=this.moveMonth(m,j)}p=m.getUTCMonth();m.setUTCDate(q);o=function(){return p!=m.getUTCMonth()}}while(o()){m.setUTCDate(--q);m.setUTCMonth(p)}return m},moveYear:function(i,h){return this.moveMonth(i,h*12)},dateWithinRange:function(h){return h>=this.startDate&&h<=this.endDate},keydown:function(l){if(this.picker.is(":not(:visible)")){if(l.keyCode==27){this.show()}return}var n=false,i,o,m,p,h;switch(l.keyCode){case 27:this.hide();l.preventDefault();break;case 37:case 39:if(!this.keyboardNavigation){break}i=l.keyCode==37?-1:1;viewMode=this.viewMode;if(l.ctrlKey){viewMode+=2}else{if(l.shiftKey){viewMode+=1}}if(viewMode==4){p=this.moveYear(this.date,i);h=this.moveYear(this.viewDate,i)}else{if(viewMode==3){p=this.moveMonth(this.date,i);h=this.moveMonth(this.viewDate,i)}else{if(viewMode==2){p=this.moveDate(this.date,i);h=this.moveDate(this.viewDate,i)}else{if(viewMode==1){p=this.moveHour(this.date,i);h=this.moveHour(this.viewDate,i)}else{if(viewMode==0){p=this.moveMinute(this.date,i);h=this.moveMinute(this.viewDate,i)}}}}}if(this.dateWithinRange(p)){this.date=p;this.viewDate=h;this.setValue();this.update();l.preventDefault();n=true}break;case 38:case 40:if(!this.keyboardNavigation){break}i=l.keyCode==38?-1:1;viewMode=this.viewMode;if(l.ctrlKey){viewMode+=2}else{if(l.shiftKey){viewMode+=1}}if(viewMode==4){p=this.moveYear(this.date,i);h=this.moveYear(this.viewDate,i)}else{if(viewMode==3){p=this.moveMonth(this.date,i);h=this.moveMonth(this.viewDate,i)}else{if(viewMode==2){p=this.moveDate(this.date,i*7);h=this.moveDate(this.viewDate,i*7)}else{if(viewMode==1){if(this.showMeridian){p=this.moveHour(this.date,i*6);h=this.moveHour(this.viewDate,i*6)}else{p=this.moveHour(this.date,i*4);h=this.moveHour(this.viewDate,i*4)}}else{if(viewMode==0){p=this.moveMinute(this.date,i*4);h=this.moveMinute(this.viewDate,i*4)}}}}}if(this.dateWithinRange(p)){this.date=p;this.viewDate=h;this.setValue();this.update();l.preventDefault();n=true}break;case 13:if(this.viewMode!=0){var k=this.viewMode;this.showMode(-1);this.fill();if(k==this.viewMode&&this.autoclose){this.hide()}}else{this.fill();if(this.autoclose){this.hide()}}l.preventDefault();break;case 9:this.hide();break}if(n){var j;if(this.isInput){j=this.element}else{if(this.component){j=this.element.find("input")}}if(j){j.change()}this.element.trigger({type:"changeDate",date:this.date})}},showMode:function(h){if(h){var i=Math.max(0,Math.min(c.modes.length-1,this.viewMode+h));if(i>=this.minView&&i<=this.maxView){this.element.trigger({type:"changeMode",date:this.viewDate,oldViewMode:this.viewMode,newViewMode:i});this.viewMode=i}}this.picker.find(">div").hide().filter(".datetimepicker-"+c.modes[this.viewMode].clsName).css("display","block");this.updateNavArrows()},reset:function(h){this._setDate(null,"date")},convertViewModeText:function(h){switch(h){case 4:return"decade";case 3:return"year";case 2:return"month";case 1:return"day";case 0:return"hour"}}};var a=d.fn.datetimepicker;d.fn.datetimepicker=function(j){var h=Array.apply(null,arguments);h.shift();var i;this.each(function(){var m=d(this),l=m.data("datetimepicker"),k=typeof j=="object"&&j;if(!l){m.data("datetimepicker",(l=new f(this,d.extend({},d.fn.datetimepicker.defaults,k))))}if(typeof j=="string"&&typeof l[j]=="function"){i=l[j].apply(l,h);if(i!==undefined){return false}}});if(i!==undefined){return i}else{return this}};d.fn.datetimepicker.defaults={};d.fn.datetimepicker.Constructor=f;var e=d.fn.datetimepicker.dates={en:{days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sun"],daysMin:["Su","Mo","Tu","We","Th","Fr","Sa","Su"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],meridiem:["am","pm"],suffix:["st","nd","rd","th"],today:"Today"}};var c={modes:[{clsName:"minutes",navFnc:"Hours",navStep:1},{clsName:"hours",navFnc:"Date",navStep:1},{clsName:"days",navFnc:"Month",navStep:1},{clsName:"months",navFnc:"FullYear",navStep:1},{clsName:"years",navFnc:"FullYear",navStep:10}],isLeapYear:function(h){return(((h%4===0)&&(h%100!==0))||(h%400===0))},getDaysInMonth:function(h,i){return[31,(c.isLeapYear(h)?29:28),31,30,31,30,31,31,30,31,30,31][i]},getDefaultFormat:function(h,i){if(h=="standard"){if(i=="input"){return"yyyy-mm-dd hh:ii"}else{return"yyyy-mm-dd hh:ii:ss"}}else{if(h=="php"){if(i=="input"){return"Y-m-d H:i"}else{return"Y-m-d H:i:s"}}else{throw new Error("Invalid format type.")}}},validParts:function(h){if(h=="standard"){return/hh?|HH?|p|P|ii?|ss?|dd?|DD?|mm?|MM?|yy(?:yy)?/g}else{if(h=="php"){return/[dDjlNwzFmMnStyYaABgGhHis]/g}else{throw new Error("Invalid format type.")}}},nonpunctuation:/[^ -\/:-@\[-`{-~\t\n\rTZ]+/g,parseFormat:function(k,i){var h=k.replace(this.validParts(i),"\0").split("\0"),j=k.match(this.validParts(i));if(!h||!h.length||!j||j.length==0){throw new Error("Invalid date format.")}return{separators:h,parts:j}},parseDate:function(m,v,p,t){if(m instanceof Date){var x=new Date(m.valueOf()-m.getTimezoneOffset()*60000);x.setMilliseconds(0);return x}if(/^\d{4}\-\d{1,2}\-\d{1,2}$/.test(m)){v=this.parseFormat("yyyy-mm-dd",t)}if(/^\d{4}\-\d{1,2}\-\d{1,2}[T ]\d{1,2}\:\d{1,2}$/.test(m)){v=this.parseFormat("yyyy-mm-dd hh:ii",t)}if(/^\d{4}\-\d{1,2}\-\d{1,2}[T ]\d{1,2}\:\d{1,2}\:\d{1,2}[Z]{0,1}$/.test(m)){v=this.parseFormat("yyyy-mm-dd hh:ii:ss",t)}if(/^[-+]\d+[dmwy]([\s,]+[-+]\d+[dmwy])*$/.test(m)){var y=/([-+]\d+)([dmwy])/,n=m.match(/([-+]\d+)([dmwy])/g),h,l;m=new Date();for(var o=0;o<n.length;o++){h=y.exec(n[o]);l=parseInt(h[1]);switch(h[2]){case"d":m.setUTCDate(m.getUTCDate()+l);break;case"m":m=f.prototype.moveMonth.call(f.prototype,m,l);break;case"w":m.setUTCDate(m.getUTCDate()+l*7);break;case"y":m=f.prototype.moveYear.call(f.prototype,m,l);break}}return g(m.getUTCFullYear(),m.getUTCMonth(),m.getUTCDate(),m.getUTCHours(),m.getUTCMinutes(),m.getUTCSeconds(),0)}var n=m&&m.toString().match(this.nonpunctuation)||[],m=new Date(0,0,0,0,0,0,0),r={},u=["hh","h","ii","i","ss","s","yyyy","yy","M","MM","m","mm","D","DD","d","dd","H","HH","p","P"],w={hh:function(s,i){return s.setUTCHours(i)},h:function(s,i){return s.setUTCHours(i)},HH:function(s,i){return s.setUTCHours(i==12?0:i)},H:function(s,i){return s.setUTCHours(i==12?0:i)},ii:function(s,i){return s.setUTCMinutes(i)},i:function(s,i){return s.setUTCMinutes(i)},ss:function(s,i){return s.setUTCSeconds(i)},s:function(s,i){return s.setUTCSeconds(i)},yyyy:function(s,i){return s.setUTCFullYear(i)},yy:function(s,i){return s.setUTCFullYear(2000+i)},m:function(s,i){i-=1;while(i<0){i+=12}i%=12;s.setUTCMonth(i);while(s.getUTCMonth()!=i){if(isNaN(s.getUTCMonth())){return s}else{s.setUTCDate(s.getUTCDate()-1)}}return s},d:function(s,i){return s.setUTCDate(i)},p:function(s,i){return s.setUTCHours(i==1?s.getUTCHours()+12:s.getUTCHours())}},k,q,h;w.M=w.MM=w.mm=w.m;w.dd=w.d;w.P=w.p;m=g(m.getFullYear(),m.getMonth(),m.getDate(),m.getHours(),m.getMinutes(),m.getSeconds());if(n.length==v.parts.length){for(var o=0,j=v.parts.length;o<j;o++){k=parseInt(n[o],10);h=v.parts[o];if(isNaN(k)){switch(h){case"MM":q=d(e[p].months).filter(function(){var i=this.slice(0,n[o].length),s=n[o].slice(0,i.length);return i==s});k=d.inArray(q[0],e[p].months)+1;break;case"M":q=d(e[p].monthsShort).filter(function(){var i=this.slice(0,n[o].length),s=n[o].slice(0,i.length);return i.toLowerCase()==s.toLowerCase()});k=d.inArray(q[0],e[p].monthsShort)+1;break;case"p":case"P":k=d.inArray(n[o].toLowerCase(),e[p].meridiem);break}}r[h]=k}for(var o=0,z;o<u.length;o++){z=u[o];if(z in r&&!isNaN(r[z])){w[z](m,r[z])}}}return m},formatDate:function(h,n,p,l){if(h==null){return""}var o;if(l=="standard"){o={yy:h.getUTCFullYear().toString().substring(2),yyyy:h.getUTCFullYear(),m:h.getUTCMonth()+1,M:e[p].monthsShort[h.getUTCMonth()],MM:e[p].months[h.getUTCMonth()],d:h.getUTCDate(),D:e[p].daysShort[h.getUTCDay()],DD:e[p].days[h.getUTCDay()],p:(e[p].meridiem.length==2?e[p].meridiem[h.getUTCHours()<12?0:1]:""),h:h.getUTCHours(),i:h.getUTCMinutes(),s:h.getUTCSeconds()};if(e[p].meridiem.length==2){o.H=(o.h%12==0?12:o.h%12)}else{o.H=o.h}o.HH=(o.H<10?"0":"")+o.H;o.P=o.p.toUpperCase();o.hh=(o.h<10?"0":"")+o.h;o.ii=(o.i<10?"0":"")+o.i;o.ss=(o.s<10?"0":"")+o.s;o.dd=(o.d<10?"0":"")+o.d;o.mm=(o.m<10?"0":"")+o.m}else{if(l=="php"){o={y:h.getUTCFullYear().toString().substring(2),Y:h.getUTCFullYear(),F:e[p].months[h.getUTCMonth()],M:e[p].monthsShort[h.getUTCMonth()],n:h.getUTCMonth()+1,t:c.getDaysInMonth(h.getUTCFullYear(),h.getUTCMonth()),j:h.getUTCDate(),l:e[p].days[h.getUTCDay()],D:e[p].daysShort[h.getUTCDay()],w:h.getUTCDay(),N:(h.getUTCDay()==0?7:h.getUTCDay()),S:(h.getUTCDate()%10<=e[p].suffix.length?e[p].suffix[h.getUTCDate()%10-1]:""),a:(e[p].meridiem.length==2?e[p].meridiem[h.getUTCHours()<12?0:1]:""),g:(h.getUTCHours()%12==0?12:h.getUTCHours()%12),G:h.getUTCHours(),i:h.getUTCMinutes(),s:h.getUTCSeconds()};o.m=(o.n<10?"0":"")+o.n;o.d=(o.j<10?"0":"")+o.j;o.A=o.a.toString().toUpperCase();o.h=(o.g<10?"0":"")+o.g;o.H=(o.G<10?"0":"")+o.G;o.i=(o.i<10?"0":"")+o.i;o.s=(o.s<10?"0":"")+o.s}else{throw new Error("Invalid format type.")}}var h=[],m=d.extend([],n.separators);for(var k=0,j=n.parts.length;k<j;k++){if(m.length){h.push(m.shift())}h.push(o[n.parts[k]])}if(m.length){h.push(m.shift())}return h.join("")},convertViewMode:function(h){switch(h){case 4:case"decade":h=4;break;case 3:case"year":h=3;break;case 2:case"month":h=2;break;case 1:case"day":h=1;break;case 0:case"hour":h=0;break}return h},headTemplate:'<thead><tr><th class="prev"><i class="{leftArrow}"/></th><th colspan="5" class="switch"></th><th class="next"><i class="{rightArrow}"/></th></tr></thead>',headTemplateV3:'<thead><tr><th class="prev"><span class="{iconType} {leftArrow}"></span> </th><th colspan="5" class="switch"></th><th class="next"><span class="{iconType} {rightArrow}"></span> </th></tr></thead>',contTemplate:'<tbody><tr><td colspan="7"></td></tr></tbody>',footTemplate:'<tfoot><tr><th colspan="7" class="today"></th></tr></tfoot>'};c.template='<div class="datetimepicker"><div class="datetimepicker-minutes"><table class=" table-condensed">'+c.headTemplate+c.contTemplate+c.footTemplate+'</table></div><div class="datetimepicker-hours"><table class=" table-condensed">'+c.headTemplate+c.contTemplate+c.footTemplate+'</table></div><div class="datetimepicker-days"><table class=" table-condensed">'+c.headTemplate+"<tbody></tbody>"+c.footTemplate+'</table></div><div class="datetimepicker-months"><table class="table-condensed">'+c.headTemplate+c.contTemplate+c.footTemplate+'</table></div><div class="datetimepicker-years"><table class="table-condensed">'+c.headTemplate+c.contTemplate+c.footTemplate+"</table></div></div>";c.templateV3='<div class="datetimepicker"><div class="datetimepicker-minutes"><table class=" table-condensed">'+c.headTemplateV3+c.contTemplate+c.footTemplate+'</table></div><div class="datetimepicker-hours"><table class=" table-condensed">'+c.headTemplateV3+c.contTemplate+c.footTemplate+'</table></div><div class="datetimepicker-days"><table class=" table-condensed">'+c.headTemplateV3+"<tbody></tbody>"+c.footTemplate+'</table></div><div class="datetimepicker-months"><table class="table-condensed">'+c.headTemplateV3+c.contTemplate+c.footTemplate+'</table></div><div class="datetimepicker-years"><table class="table-condensed">'+c.headTemplateV3+c.contTemplate+c.footTemplate+"</table></div></div>";d.fn.datetimepicker.DPGlobal=c;d.fn.datetimepicker.noConflict=function(){d.fn.datetimepicker=a;return this};d(document).on("focus.datetimepicker.data-api click.datetimepicker.data-api",'[data-provide="datetimepicker"]',function(i){var h=d(this);if(h.data("datetimepicker")){return}i.preventDefault();h.datetimepicker("show")});d(function(){d('[data-provide="datetimepicker-inline"]').datetimepicker()})}(window.jQuery);
// angular.module('app')
// .animation('.reveal-animation', function() {
//   return {
//     enter: function(element, done) {
//       element.css('display', 'none');
//       element.fadeIn(500, done);
//       return function() {
//         element.stop();
//       }
//     },
//     leave: function(element, done) {
//       element.fadeOut(500, done)
//       return function() {
//         element.stop();
//       }
//     }
//   }
// })

angular.module('app')
.config(['growlProvider', function(growlProvider) {
    growlProvider.onlyUniqueMessages(false);
    growlProvider.globalTimeToLive(10000);
}]);


angular.module('app').config([
  '$stateProvider',
  '$urlRouterProvider',
  '$locationProvider',
  function($stateProvider, $urlRouterProvider, $locationProvider) {
    $urlRouterProvider.otherwise('/')
    // $locationProvider.html5Mode(true)

    $stateProvider
      .state('base', {
        views: {
          '@': {
            templateUrl: 'partials/layout.html',
            controller: 'IndexController',
          },
          'footer@': {
            templateUrl: 'partials/footer.html',
          },
        },
        abstract: true,
      })
      .state('index', {
        parent: 'base',
        url: '/',
        views: {
          'body@base': {
            templateUrl: 'partials/body.html',
            controller: 'HomeController',
          },
        },
      })
      .state('musicians', {
        parent: 'base',
        url: '/musicians',
        views: {
          'body@base': {
            templateUrl: 'partials/musicians/body.html',
            controller: 'MusiciansController',
          },
        },
      })
      .state('medias', {
        parent: 'base',
        url: '/medias',
        views: {
          'body@base': {
            controller: 'MediasController',
            templateUrl: 'partials/medias/body.html',
          },
        },
      })
      .state('contact', {
        parent: 'base',
        url: '/contact',
        views: {
          'body@base': {
            templateUrl: 'partials/contact/body.html',
            controller: 'ContactController',
          },
        },
      })
      .state('tour', {
        parent: 'base',
        url: '/tour',
        views: {
          'body@base': {
            controller: 'TourController',
            templateUrl: 'partials/tour/body.html',
          },
        },
      })
  },
])

;(function(angular) {
  angular.module('app').controller('AudioController', [
    '$sce',
    '$rootScope',
    '$scope',
    'AudioService',
    'Audio',
    '$window',
    '$timeout',
    function($sce, $rootScope, $scope, AudioService, Audio, $window, $timeout) {
      var controller = this

      var init = false

      controller.onPlayerReady = function(API) {
        $rootScope.player = API
        $rootScope.player.setVolume(0.8)

        $rootScope.$watch('player.isBuffering', function(newVal, oldVal) {
          if (newVal === false && oldVal === true) {
            $rootScope.buffering = false
          }
        })

        if (API.currentState !== 'play') {
          //Force play if autoplay doesn't work
          API.play()
          // API.currentState = 'play';
        }
      }

      $rootScope.files = []
      $rootScope.buffering = true

      $rootScope.$on('video:enter', function() {
        $rootScope.player.pause()
      })

      controller.vgComplete = function() {
        if ($rootScope.playing < $rootScope.files.length) {
          // console.log('end of song, launchinf following...');
          controller.changeTrack($rootScope.playing + 1)
        }
      }

      controller.changeTrack = function(index) {
        // console.log($rootScope.files[index][0])
        // $rootScope.player.pause();
        $rootScope.playing = index

        angular.forEach($rootScope.files, function(file) {
          file[0].playing = false
        })
        controller.config.sources = $rootScope.files[index]
        $rootScope.files[index][0].playing = true

        // $rootScope.player.changeSource();
        $rootScope.player.play()
      }

      function initPlayer(width) {
        // if (width < 1024) return;
        init = true
        AudioService.getFilenames().then(function(response) {
          $rootScope.files = []
          angular.forEach(response.data, function(file) {
            var composer = file.substr(file.indexOf('('))
            var endIndex = composer.indexOf(';')
            var comp = composer.substr(1, --endIndex)
            // console.log(comp)
            var source = [
              {
                name: file,
                src: $sce.trustAsResourceUrl('/audiofiles/' + file),
                type: 'audio/mp3',
                composer: comp,
                playing: false,
                displayName: file.substr(0, file.indexOf('(')),
                // movie: file.substr(file.indexOf(';') + 1, file.indexOf('.')).replace('.mp3', ''),
                fullName: file.substr(0, file.indexOf('.')),
              },
            ]
            $rootScope.files.push(source)
          })
          $rootScope.buffering = false
          $rootScope.playing = 0

          if (!$rootScope.video) {
            $timeout(function() {
              // console.log('start playing');
              $rootScope.files[0][0].playing = true
              $rootScope.player.play()
            })
          } else {
            // console.log('video flag on rootScope');
          }

          controller.config = {
            sources: $rootScope.files[0],

            theme: {
              url: 'bower_components/videogular-themes-default/videogular.min.css',
            },
          }
          // console.log(controller);
        })
      }

      $scope.$watch(
        function() {
          return $window.innerWidth
        },
        function(width) {
          // console.log('width: ' + width);
          // if (width > 1024) {
          $('#leftcol').show()
          if ($rootScope.player) $rootScope.player.play()
          // } else {
          //     $('#leftcol').hide();
          //     if ($rootScope.player)
          //         $rootScope.player.pause();
          // }
          if (!init) {
            initPlayer(width)
          }
        }
      )
    },
  ])
})(angular)

angular.module('app')
    .controller('ContactController', [
        '$scope',
        'SidebarService',
        function($scope, SidebarService) {
            SidebarService.wipeOptions();
        }
    ]);

angular.module('app')
.controller('HomeController', [
	'ImageUploader',
	'$rootScope',
	'$scope',
	'Home',
    'SidebarService',
	function(ImageUploader, $rootScope, $scope, Home, SidebarService){
	$scope.home = {};
    SidebarService.wipeOptions();

    $scope.updateHome = function() {
        Home.upsert($scope.home, function(data) {
            $scope.home = data;
        }, function(err){
        	console.log(err);
        });
    };

    $scope.$on('loginSuccessful', function() {
        $scope.logged = true;
    });

    $scope.$on('logoutSuccessful', function() {
        $scope.logged = false;
    });

    if ($rootScope.logged) {
        $scope.logged = true;
    }

    Home.find(function(data) {
        $scope.home = data[0];
    });
}]);

angular.module('app')
    .controller('LoginController', ['$scope', '$rootScope', '$timeout', 'LoginService', 'UserBoheme',
        function($scope, $rootScope, $timeout, LoginService, UserBoheme) {
            $scope.logged = false;
            $scope.creds = {};
            $scope.user = {};

            UserBoheme.getCurrent(function success(user) {
                $scope.user = user;
                $scope.logged = true;
                $rootScope.logged = true;
                LoginService.logged = true;
                $timeout(function() {
                    $rootScope.$broadcast('loginSuccessful');
                });
            });

            $scope.login = function() {
                UserBoheme.login($scope.creds,
                    function success(token) {
                        $scope.token = token;
                        UserBoheme.findById({
                            "id": token.userId
                        }, function success(data) {
                            $scope.user = data;
                            $scope.logged = true;
                            LoginService.logged = true;
                            $timeout(function() {
                                $rootScope.$broadcast('loginSuccessful');
                            });
                            $rootScope.logged = true;
                        });
                    });
            };

            $scope.logout = function() {
                var logoutResult = UserBoheme.logout({
                        "access_token": $scope.user.id
                    },
                    function(err) {
                        $scope.logged = false;
                        LoginService.logged = false;
                        $scope.token = {};
                        $scope.user = {};
                        $timeout(function() {
                            $rootScope.$broadcast('logoutSuccessful');
                        });

                        $rootScope.logged = false;
                    }
                );
            };
        }
    ]);

angular.module('app')
    .controller('MediasController', [
        'ImageUploader',
        'AudioUploader',
        '$rootScope',
        '$scope',
        'SidebarService',
        'UtilsService',
        // 'AudioService',
        'Media',
        function(ImageUploader, AudioUploader, $rootScope, $scope, SidebarService, UtilsService, /*AudioService,*/ Media) {
            $scope.$on('loginSuccessful', function() {
                $scope.logged = true;
            });

            $scope.$on('logoutSuccessful', function() {
                $scope.logged = false;
            });

            if ($rootScope.logged) {
                $scope.logged = true;
            }
            var medias = $scope.medias = [];
            var pictures = $scope.pictures = [];
            var videos = $scope.videos = [];
            var uploader = $scope.uploader = new ImageUploader('Medias');
            var audioUploader = $scope.audioUploader = new AudioUploader('audiofiles');

            uploader.onSuccessItem = function(item, response, status, headers) {
                console.log('Success while uploading media!');
                console.log(item, response);
                var media = {};
                media.path = UtilsService.getDlPath(item);
                media.type = "picture"

                Media.create(media, function(data) {
                    $scope.medias.push(data);
                })
            };

            uploader.onCompleteAll = function() {
                uploader.queue = [];
                fetchMedias();
            };

            audioUploader.onSuccessItem = function(item, response, status, headers) {
                console.log('Success while uploading audio!');
                console.log(item, response);
                var audio = {};
                audio.path = UtilsService.getDlPath(item);
                audio.name = item.file.name;

                Audio.create(audio, function(data) {
                    // AudioService.audioFiles.push(data);
                })
            };

            // growl.addInfoMessage('Ajout de ' + pictures[pictures.length - 1].name + ' au musicien ' + uploader.musician.name);
            $scope.medias = [];

            initOptions = function() {
                var options = [{
                    'state': 'editPictures',
                    'title': 'Ajouter/modifier des photos',
                    'name': 'Ajout/modif photos',
                    'admin': true
                }, {
                    'state': 'editVideos',
                    'title': 'Ajouter/modifier des vidéos Youtube, Dailymotion...',
                    'name': 'Ajout/modif vidéos',
                    'admin': true
                }, {
                    'state': 'viewPictures',
                    'title': 'Voir les photos disponibles',
                    'name': 'Photos',
                    'admin': false
                }, {
                    'state': 'viewVideos',
                    'title': 'Voir les vidéos disponibles',
                    'name': 'Vidéos',
                    'admin': false
                }];
                SidebarService.setOptions(options);
            };

            fetchMedias = function() {
                Media.find(function(data) {
                    $scope.medias = data;
                    angular.forEach($scope.medias, function(media) {
                    	if (media.type === 'picture') {
                    		pictures.push(media);
                    	} else if (media.type === 'video') {
                    		videos.push(media);
                    	}
                    });
                });
            };

            // $scope.savePictures = function() {
            //     uploader.uploadAll();
            // }

            // EXECUTION

            initOptions();
            fetchMedias();



        }
    ]);

angular.module('app')
    .controller('MusiciansController', [
        '$scope',
        '$rootScope',
        '$animate',
        'Musician',
        'Container',
        'ImageUploader',
        'SidebarService',
        'UtilsService',
        'growl',
        function($scope, $rootScope, $animate, Musician, Container, ImageUploader, SidebarService, UtilsService, growl) {

            // INIT

            // $scope.musicians = [];
            $scope.newMusician = {};
            $scope.newMusician.description = '<h1>Description du musicien</h1><br/><p>Description...</p>';
            $scope.addMusicianClicked = false;
            var uploader = $scope.uploader = new ImageUploader('Musicians');

            $scope.$on('loginSuccessful', function() {
                $scope.logged = true;
            });

            $scope.$on('logoutSuccessful', function() {
                $scope.logged = false;
            });

            $scope.$on('fileExists', function(event, array) {
                var file = array[0];
                growl.addErrorMessage('Le fichier ' + file.file.name + ' existe déjà! Choisir un autre fichier.');
                uploader.removeFromQueue(file);
            });

            if ($rootScope.logged) {
                $scope.logged = true;
            }

            var fetchMusicians = function() {
                Musician.find(function(data) {
                    initOptions();
                    $scope.musicians = data;
                    $scope.showArray = [];
                    angular.forEach($scope.musicians, function(musician, index) {
                        SidebarService.addOption({
                            'state': $scope.getMusicianAnchorID(musician),
                            'title': 'Voir la fiche de ' + musician.name,
                            'name': musician.name
                        })
                    })
                });
            };

            var initOptions = function() {
                var options = [{
                    'state': 'newMusician',
                    'title': 'Ajouter un musicien',
                    'name': 'Ajout musicien',
                    'admin': true
                }, {
                    'state': 'editMusicians',
                    'title': 'Modifier les musiciens, ajouter des photos...',
                    'name': 'Modifier musiciens',
                    'admin': true
                }];
                SidebarService.setOptions(options);
            };

            $scope.uploader.onSuccessItem = function(item, response, status, headers) {
                console.log(item, response);
                var pictures = uploader.musician.pictures;
                if (!pictures) {
                    pictures = [];
                }
                pictures.push({
                    dlPath: UtilsService.getDlPath(item),
                    name: uploader.musician.name
                });
                uploader.musician.pictures = pictures;
                // growl.addInfoMessage('Ajout de ' + pictures[pictures.length - 1].name + ' au musicien ' + uploader.musician.name);
            };

            $scope.uploader.onCompleteAll = function() {
                Musician.upsert(uploader.musician, function(data) {
                    // growl.addInfoMessage('Sauvegarde du musicien ' + uploader.musician.name + ' effectuée :)');
                });
            };

            // $scope.clickAddMusician = function() {
            //     $scope.addMusicianClicked = !$scope.addMusicianClicked;
            // };

            $scope.addMusician = function() {
                Musician.create($scope.newMusician, function(data) {
                    growl.addInfoMessage('Ajout de ' + $scope.newMusician.name + ' effectué :)');
                    fetchMusicians();
                    $scope.newMusician = {};
                    $scope.newMusician.description = '<h1>Description du musicien</h1><br/><p>Description...</p>';
                    $scope.addMusicianClicked = false;
                });
            };

            $scope.saveMusician = function(musician) {
                if (uploader.queue.length > 0) {
                    uploader.musician = musician;
                    uploader.uploadAll();
                }
                Musician.upsert(musician, function(data) {
                    musician = data;
                    growl.addSuccessMessage('Le musicien ' + musician.name + ' a bien été sauvé :)');
                }, function(err) {
                    console.log(err);
                });
            };

            $scope.deleteMusician = function(index) {
                var musician = $scope.musicians[index];
                if (musician.pictures) {
                    $scope.deletePicture(musician, -1);
                }
                Musician.deleteById({
                    'id': musician.id
                }, function(data) {
                    console.log(data);
                    $scope.musicians.splice(index, 1);
                });
            };

            $scope.deletePicture = function(musician, index) {
                var pictures = [];
                var counter = 0;
                if (index >= 0) { // delete one picture
                    pictures.push(musician.pictures[index]);
                    musician.pictures.splice(index, 1);
                } else { // delete all (delete musician)
                    pictures = musician.pictures;
                }
                angular.forEach(pictures, function(picture) {
                    Container.removeFile({
                        'container': 'Musicians',
                        'file': UtilsService.getFileName(picture.dlPath)
                    }, function(data) {
                        // growl.addInfoMessage(data);
                        if (index >= 0) {
                            $scope.saveMusician(musician);
                        }
                    }, function(err) {
                        // growl.addErrorMessage(err);
                        if (index >= 0) {
                            $scope.saveMusician(musician);
                        }
                    });
                });
            };

            $scope.showMusician = function(index) {
                $scope.showArray[index] = true;
            };

            $scope.hideMusician = function(index) {
                $scope.showArray[index] = false;
            };

            $scope.getMusicianAnchorID = function(musician) {
                return musician.name.replace(' ', '-');
            };

            // EXECUTION

            fetchMusicians();


        }


    ]);

angular.module('app')
    .controller('SidebarController', [
    	'SidebarService',
    	'$scope',
    	function(SidebarService, $scope) {
    		$scope.$watch(function() {
    			return SidebarService.options;
    		}, function(data) {
    			$scope.options = data;
    		}, true);
    	}
	]);


angular.module('app')
    .controller('TourController', [
        '$scope',
        '$state',
        'LoginService',
        'SidebarService',
        'DateJazz',
        '$timeout',
        '$filter',
        function($scope, $state, LoginService, SidebarService, DateJazz, $timeout, $filter) {
            $scope.newDate = {};
            // $scope.dates = [];

            $scope.addNewDate = function(newDate) {
                const date = moment.utc(newDate.datetime, 'DD/MM/YYYY - HH:mm');
                newDate.datetime = date;
                DateJazz.create(newDate, function(data) {
                    $scope.dates.push(data);
                });
                $scope.newDate = {};
            };

            $scope.departments = [
                "01 - Ain",
                "02 - Aisne",
                "03 - Allier",
                "04 - Alpes de Hautes-Provence",
                "05 - Hautes-Alpes",
                "06 - Alpes-Maritimes",
                "07 - Ardèche",
                "08 - Ardennes",
                "09 - Ariège",
                "10 - Aube",
                "11 - Aude",
                "12 - Aveyron",
                "13 - Bouches-du-Rhône",
                "14 - Calvados",
                "15 - Cantal",
                "16 - Charente",
                "17 - Charente-Maritime",
                "18 - Cher",
                "19 - Corrèze",
                "2A - Corse-du-Sud",
                "2B - Haute-Corse",
                "21 - Côte-d'Or",
                "22 - Côtes d'Armor",
                "23 - Creuse",
                "24 - Dordogne",
                "25 - Doubs",
                "26 - Drôme",
                "27 - Eure",
                "28 - Eure-et-Loir",
                "29 - Finistère",
                "30 - Gard",
                "31 - Haute-Garonne",
                "32 - Gers",
                "33 - Gironde",
                "34 - Hérault",
                "35 - Ille-et-Vilaine",
                "36 - Indre",
                "37 - Indre-et-Loire",
                "38 - Isère",
                "39 - Jura",
                "40 - Landes",
                "41 - Loir-et-Cher",
                "42 - Loire",
                "43 - Haute-Loire",
                "44 - Loire-Atlantique",
                "45 - Loiret",
                "46 - Lot",
                "47 - Lot-et-Garonne",
                "48 - Lozère",
                "49 - Maine-et-Loire",
                "50 - Manche",
                "51 - Marne",
                "52 - Haute-Marne",
                "53 - Mayenne",
                "54 - Meurthe-et-Moselle",
                "55 - Meuse",
                "56 - Morbihan",
                "57 - Moselle",
                "58 - Nièvre",
                "59 - Nord",
                "60 - Oise",
                "61 - Orne",
                "62 - Pas-de-Calais",
                "63 - Puy-de-Dôme",
                "64 - Pyrénées-Atlantiques",
                "65 - Hautes-Pyrénées",
                "66 - Pyrénées-Orientales",
                "67 - Bas-Rhin",
                "68 - Haut-Rhin",
                "69 - Rhône",
                "70 - Haute-Saône",
                "71 - Saône-et-Loire",
                "72 - Sarthe",
                "73 - Savoie",
                "74 - Haute-Savoie",
                "75 - Paris",
                "76 - Seine-Maritime",
                "77 - Seine-et-Marne",
                "78 - Yvelines",
                "79 - Deux-Sèvres",
                "80 - Somme",
                "81 - Tarn",
                "82 - Tarn-et-Garonne",
                "83 - Var",
                "84 - Vaucluse",
                "85 - Vendée",
                "86 - Vienne",
                "87 - Haute-Vienne",
                "88 - Vosges",
                "89 - Yonne",
                "90 - Territoire-de-Belfort",
                "91 - Essonne",
                "92 - Hauts-de-Seine",
                "93 - Seine-Saint-Denis",
                "94 - Val-de-Marne",
                "95 - Val-d'Oise"
            ];

            $timeout(function() {
                jQuery.fn.datetimepicker.dates['fr'] = {
                    days: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi", "Dimanche"],
                    daysShort: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam", "Dim"],
                    daysMin: ["D", "L", "Ma", "Me", "J", "V", "S", "D"],
                    months: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
                    monthsShort: ["Jan", "Fev", "Mar", "Avr", "Mai", "Jui", "Jul", "Aou", "Sep", "Oct", "Nov", "Dec"],
                    today: "Aujourd'hui",
                    suffix: [],
                    meridiem: ["am", "pm"],
                    weekStart: 1,
                    format: "dd/mm/yyyy"
                };

                jQuery('#datetime-picker').datetimepicker({
                    language: 'fr',
                    weekStart: 1,
                    // todayBtn: 1,
                    autoclose: 1,
                    todayHighlight: 1,
                    startView: 2,
                    forceParse: 0,
                    showMeridian: 0,
                    minutesDisabled: [5, 10, 20, 25, 35, 40, 50, 55],
                    hoursDisabled: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
                    format: "dd/mm/yyyy - hh:ii"
                });
            }, 100);

            $scope.delete = function(id) {
                DateJazz.deleteById({id: id}, function(response) {
                    _.forEach($scope.dates, function(date) {
                        if (date.id === id ) {
                            _.pull($scope.dates, date);
                        }
                    });
                });
            };

            DateJazz.find(function(dates) {
                $scope.dates = dates;
            });

            if (LoginService.logged) {
                $scope.logged = true;
            }
        }
    ]);

(function(angular) {
    'use strict';

    var app = angular.module('app');

    function orderByDate(items, tableType) {
        if (tableType === 'next') {
            items.sort(function(a, b) {
                return parseDate(a.datetime).valueOf() - parseDate(b.datetime).valueOf();
            });
        } else if (tableType === 'previous') {
            items.sort(function(a, b) {
                return parseDate(b.datetime).valueOf() - parseDate(a.datetime).valueOf();
            });
        }
        return items;

    }

    function parseDate(input) {
        if (input) {
            return new Date(input);

        }
        return 'undefined';

    }

    app.filter('nextShows', function() {
        return function(items) {
            var nextShows = [];
            if (items !== undefined && items.length) {


                var today = new Date();


                for (var i = 0; i < items.length; i++) {
                    var item = items[i];
                    if (parseDate(item.datetime).valueOf() > today.valueOf()) {
                        nextShows.push(item);
                    }
                }
            }

            return orderByDate(nextShows, 'next');
        };
    });

    app.filter('previousShows', function() {
        return function(items) {
            var previousShows = [];
            if (items !== undefined && items.length) {

                var today = new Date();

                for (var i = 0; i < items.length; i++) {
                    var item = items[i];
                    if (parseDate(item.datetime).valueOf() < today.valueOf()) {
                        previousShows.push(item);
                    }
                }
            }
            return orderByDate(previousShows, 'previous');
        };
    });

})(angular)

/**
 * Delwiv : seen here : http://stackoverflow.com/a/24684360
 * A generic confirmation for risky actions.
 * Usage: Add attributes: ng-really-message="Are you sure"? ng-really-click="takeAction()" function
 */
angular.module('app').directive('ngReallyClick', [function() {
    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            element.bind('click', function() {
                var message = attrs.ngReallyMessage;
                if (message && confirm(message)) {
                    scope.$apply(attrs.ngReallyClick);
                }
            });
        }
    }
}]);

angular.module('app.modules', [
    'app.modules.slideshow',
    'app.modules.videos'
]);

angular.module('app.services')
    .factory('AudioService', [
        '$http',
        function($http) {
            var service = {};

            service.audioFiles = [];

            service.getFilenames = function() {
                return $http.get('/audiofiles');
            }

            service.getVideos = function() {
                return $http.get('/videofiles');
            }


            service.getImg = function() {
                return $http.get('/img');
            }

            return service;
        }
    ]);

angular.module('app.services').factory('AudioUploader', [
    'FileUploader',
    'Container',
    '$http',
    '$rootScope',
    'growl',
    'UtilsService',
    function(FileUploader, Container, $http, $rootScope, growl, UtilsService) {
        FileUploader.inherit(AudioUploader, FileUploader);

        var container = {};
        var uploader = {};
        var fileName = '';
        // var currentItem = {};

        function AudioUploader(containerName) {
            // fileName = itemName;
            AudioUploader.super_.apply(this, {});

            uploader = this;

            this.url = '/api/Containers/' + containerName + '/upload';
            this.formData = [{
                key: 'value'
            }];
            this.removeAfterUpload = true;

            Container.getContainer({
                container: containerName
            }, function success(data) {
                container = data;
            }, function err(data) {
                // console.log(data);
                Container.createContainer({
                    'name': containerName
                }, function success(data) {
                    container = data;
                });
            });
        };

        AudioUploader.prototype.onBeforeUploadItem = function(fileItem) {
            // var ext = getExtension(fileItem.file.name);
            // fileItem.file.name = fileName + '.' + ext;
        };

        AudioUploader.prototype.onAfterAddingFile = function(item) {
            // currentItem = item;
            var fileExt = UtilsService.getExtension(item.file.name);

            if (fileExt !== 'mp3') {
                $rootScope.$emit('notMp3File', [item.file.name]);
            }

            $http.get(this.url.replace('upload', 'files/' + item.file.name))
                // success means file exists so here it's a failure :)
                .success(function(data, status) {
                    // console.log(data, status);
                    angular.forEach(uploader.queue, function(fileItem, index) {
                        if (fileItem.file.name === data.name) {
                            $rootScope.$emit('fileExists', [fileItem]);
                        }
                    });

                });
            //error means file doesn't exist so we can upload
        };

        return AudioUploader;
    }
]);

angular.module('app.services').factory('ImageUploader', [
    'FileUploader',
    'Container',
    '$http',
    '$rootScope',
    'growl',
    'UtilsService',
    function(FileUploader, Container, $http, $rootScope, growl, UtilsService) {
        FileUploader.inherit(ImageUploader, FileUploader);

        var container = {};
        var uploader = {};
        var fileName = '';
        // var currentItem = {};

        function ImageUploader(containerName) {
            // fileName = itemName;
            ImageUploader.super_.apply(this, {});

            uploader = this;

            this.url = '/api/Containers/' + containerName + '/upload';
            this.formData = [{
                key: 'value'
            }];
            this.removeAfterUpload = true;

            Container.getContainer({
                container: containerName
            }, function success(data) {
                container = data;
            }, function err(data) {
                // console.log(data);
                Container.createContainer({
                    'name': containerName
                }, function success(data) {
                    container = data;
                });
            });
        };

        ImageUploader.prototype.onBeforeUploadItem = function(fileItem) {
            // var ext = getExtension(fileItem.file.name);
            // fileItem.file.name = fileName + '.' + ext;
        };

        ImageUploader.prototype.onAfterAddingFile = function(item) {
            // currentItem = item;
            $http.get(this.url.replace('upload', 'files/' + item.file.name))
                // success means file exists so here it's a failure :)
                .success(function(data, status) {
                    // console.log(data, status);
                    angular.forEach(uploader.queue, function(fileItem, index) {
                        if (fileItem.file.name === data.name) {
                            $rootScope.$emit('fileExists', [fileItem]);
                        }
                    });

                });
            //error means file doesn't exist so we can upload
        };



        return ImageUploader;
    }
]);

angular.module('app.services')
    .factory('LoginService', [
        'UserBoheme',
        '$rootScope',
        function(UserBoheme, $rootScope) {
            var loginService = {};
            loginService.logged = false;
            loginService.user = {};
            loginService.token = {};

            return loginService;
        }
    ]);

angular.module('app.services')
.factory('SidebarService', [
    function(){
    	var service = {};
    	service.options = [];

    	service.setOptions = function(options) {
    		if (options.constructor === Array){
    			service.options = options;
    		}
    	};

    	service.wipeOptions = function() {
			service.options = [];
    	};

    	service.addOption = function(option) {
    		service.options.push(option);
    	};

    	return service;
    }]);

angular.module('app.services')
    .factory('UtilsService', [
        function() {
            var service = {};

            service.getDlPath = function(fileItem) {
                var dlPath = fileItem.url.replace('\/upload', '\/download') + '/' + fileItem.file.name;
                console.log(dlPath);
                return dlPath;
            };

            service.getExtension = function(filename) {
                var parts = filename.split('.');
                return parts[parts.length - 1];
            }

            return service;
        }
    ]);

angular.module('app.modules.slideshow', [])
    .directive('slideshow', directive);
    // .controller('SlideshowController', controller);

function directive() {
    return {
        restrict: 'E',
        templateUrl: 'js/modules/slideshow/slideshow.html',
        controller: ["$scope", "$http", function($scope, $http) {
            $http.get('/photos').then(function(response) {
                // console.log(response.data);
                $scope.slides = response.data;
            })
        }]
    }
}

(function(angular) {

    config.$inject = ["$stateProvider", "$provide"];
    angular.module('app.modules.videos', [
        'app.services'
    ])
        .config(config)
        .controller('VideosController', [
            "$sce",
            '$scope',
            '$rootScope',
            'Video',
            function($sce, $scope, $rootScope, Video) {
                var controller = this;

                $rootScope.video = true;

                $scope.$on('loginSuccessful', function() {
                    $scope.logged = true;
                });

                $scope.updateVideo = function() {
                    Video.upsert(controller.video, function(data) {
                        controller.video = data;
                    });
                };

                $scope.$on('logoutSuccessful', function() {
                    $scope.logged = false;
                });

                if ($rootScope.logged) {
                    $scope.logged = true;
                }

                $rootScope.$on('player:startPlaying', function() {
                    $rootScope.player.pause();
                });

                Video.find(function(data) {
                    controller.video = data[0];

                    $rootScope.$broadcast('video:enter');
                });

            }
        ]);

    function config($stateProvider, $provide) {
        $provide.decorator('taCustomRenderers', ['$delegate', function(taCustomRenderers){
            taCustomRenderers = [
                {
                    selector: 'img',
                    customAttribute:'ta-insert-video',
                    renderLogic: function(element){
                        var iframe = angular.element('<iframe></iframe>');
                        var attributes = element.prop("attributes");
                        // loop through element attributes and apply them on iframe
                        angular.forEach(attributes, function(attr) {
                            iframe.attr(attr.name, attr.value);
                        });
                        iframe.attr('src', iframe.attr('ta-insert-video'));
                        element.wrap('<div class="embed-responsive embed-responsive-16by9"></div>');
                        element.replaceWith(iframe);
                    }
                }
            ]
            return taCustomRenderers;
        }]);
        $stateProvider.state('videos', {
            parent: 'base',
            url: '/videos',
            views: {
                'body@base': {
                    templateUrl: 'js/modules/videos/videos.html',
                    controller: 'VideosController',
                    controllerAs: 'vm'
                }
            }
        });
    }
})(angular);
